var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var gql = require('apollo-server').gql;
var typedefs = gql(__makeTemplateObject(["\n\n  type User{\n    id: ID!\n    firstName: String!\n    lastName: String!\n    age: Int!\n    guide: Boolean!\n    location: String!\n    gender: Gender!\n    summary: String\n    profileImg: String\n    headerImg: String\n  }\n\n  type Language {\n    id: ID!\n    name: String!\n  }\n\n  type Interest {\n    id: ID!\n    name: String!\n  }\n\n  type Favorite {\n    id: ID!\n    user1: Int!\n    user2: Int!\n  }\n\n  type Message {\n    id: ID!\n    chatId: Int!\n    userId: Int!\n    content: String\n  }\n\n  type Experience {\n    id: ID!\n    userId: Int!\n    title: String!\n    description: String\n  }\n\n  type Photo {\n    userId: Int!\n    imageUrl: String!\n  }\n\n  input LoginInput {\n    email: String!\n    password: String!\n  }\n\n  input UserInput {\n    id: ID\n    firstName: String\n    lastName: String\n    email: String\n    dob: String\n    password: String\n    guide: Boolean\n    location: String\n    gender: Gender\n    summary: String\n    profileImg: String\n    headerImg: String\n  }\n\n  input UsersInput {\n    location: String!\n    interests: [InterestInput]\n  }\n\n  input InterestInput {\n    id: ID!\n    name: String!\n  }\n\n  input ExperienceInput {\n    id: ID\n    userId: Int!\n    title: String\n    description: String\n  }\n\n  input PhotoInput {\n    photo: String!\n    userId: Int!\n  }\n\n  input MessageInput {\n    favoriteId: Int!\n    userId: Int!\n    content: String!\n  }\n\n  input FavoriteInput {\n    id: Int\n    userId: Int!\n  }\n\n  enum Gender {\n    MALE\n    FEMALE\n  }\n\n  type Query {\n    user(input: LoginInput!): User! #login user\n    users(input: UsersInput!): [User]! #retrive list of cards\n    languages: [Language]! #language selection when making profile\n    interests: [Interest]! #interest selection when making profile\n    favorites(input: UserInput!): [Favorite]! #get list of chats when clicking faves tab\n    experiences(input: UserInput!): [Experience]! #get list of experiences when looking at a user profile\n    userAlbums(input: UserInput!): [Photo]! #get photos when looking at a user profile\n    messages(input: MessageInput!): [Message]! #get messages when opening a chat\n  }\n\n  type Mutation {\n    user(input: UserInput!): User! #edit user profile\n    experiences(input: ExperienceInput!): Experience! #add or edit experiences associated with user profile\n    userAlbums(input: PhotoInput!): Photo! #add or edit photos associated with user profile\n    messages(input: MessageInput!): Message! #add or edit messages associated with a chat\n    favorites(input: FavoriteInput!): User! #add or remove favorite\n  }\n\n"], ["\n\n  type User{\n    id: ID!\n    firstName: String!\n    lastName: String!\n    age: Int!\n    guide: Boolean!\n    location: String!\n    gender: Gender!\n    summary: String\n    profileImg: String\n    headerImg: String\n  }\n\n  type Language {\n    id: ID!\n    name: String!\n  }\n\n  type Interest {\n    id: ID!\n    name: String!\n  }\n\n  type Favorite {\n    id: ID!\n    user1: Int!\n    user2: Int!\n  }\n\n  type Message {\n    id: ID!\n    chatId: Int!\n    userId: Int!\n    content: String\n  }\n\n  type Experience {\n    id: ID!\n    userId: Int!\n    title: String!\n    description: String\n  }\n\n  type Photo {\n    userId: Int!\n    imageUrl: String!\n  }\n\n  input LoginInput {\n    email: String!\n    password: String!\n  }\n\n  input UserInput {\n    id: ID\n    firstName: String\n    lastName: String\n    email: String\n    dob: String\n    password: String\n    guide: Boolean\n    location: String\n    gender: Gender\n    summary: String\n    profileImg: String\n    headerImg: String\n  }\n\n  input UsersInput {\n    location: String!\n    interests: [InterestInput]\n  }\n\n  input InterestInput {\n    id: ID!\n    name: String!\n  }\n\n  input ExperienceInput {\n    id: ID\n    userId: Int!\n    title: String\n    description: String\n  }\n\n  input PhotoInput {\n    photo: String!\n    userId: Int!\n  }\n\n  input MessageInput {\n    favoriteId: Int!\n    userId: Int!\n    content: String!\n  }\n\n  input FavoriteInput {\n    id: Int\n    userId: Int!\n  }\n\n  enum Gender {\n    MALE\n    FEMALE\n  }\n\n  type Query {\n    user(input: LoginInput!): User! #login user\n    users(input: UsersInput!): [User]! #retrive list of cards\n    languages: [Language]! #language selection when making profile\n    interests: [Interest]! #interest selection when making profile\n    favorites(input: UserInput!): [Favorite]! #get list of chats when clicking faves tab\n    experiences(input: UserInput!): [Experience]! #get list of experiences when looking at a user profile\n    userAlbums(input: UserInput!): [Photo]! #get photos when looking at a user profile\n    messages(input: MessageInput!): [Message]! #get messages when opening a chat\n  }\n\n  type Mutation {\n    user(input: UserInput!): User! #edit user profile\n    experiences(input: ExperienceInput!): Experience! #add or edit experiences associated with user profile\n    userAlbums(input: PhotoInput!): Photo! #add or edit photos associated with user profile\n    messages(input: MessageInput!): Message! #add or edit messages associated with a chat\n    favorites(input: FavoriteInput!): User! #add or remove favorite\n  }\n\n"]));
module.exports = typedefs;
